# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 16
      uses: actions/setup-java@v2
      with:
        java-version: '16'
        distribution: 'adopt'
        cache: gradle
    - name: Ponicode Unit Test
  # You may pin to the exact commit or the version.
  # uses: ponicode/unit-testing-action@ab61a5a8e527affa366dda30d40fb205147b2513
      uses: ponicode/unit-testing-action@0.0.1-christmas
      with:
    # Path of repo to generate unit tests for
        repoPath: ./ # default is ./
    # Ponicode token to use Ponicode API
        authToken: e15d41aa-763d-4185-babc-4f1dff67955a # default is 
    # Boolean. Enter true to generate test for changes since last repo or enter false if you want to generate for the whole repo
        changedFilesOnly: false # optional, default is false
    # String. Enter the path to your coverage-final.json (Example: coverage/coverage-final.json)
        coverageJsonPath: coverage/coverage-final.json # optional
    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
